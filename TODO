Image Processing Web API

Create assets library:
  âœ” Store images with different size in `./assets` folder @started(21-05-29 22:16) @done(21-05-29 22:18) @lasted(2m49s)

Create API Endpoints:
  - Handle `GET /images` @started(21-05-29 22:21)
    Return a list of image names stored in the filesystem
    - Test if the endpoint returns 200 with the correct list of images

  - Handle `GET /images?filename=image_name`
    Return the image without resizing
    - Test if the endpoint returns 200 with the correct image given `filename`  
    - Test if the endpoint returns 404 given not existing `filename`

  - Handle `/images?filename=image_name&width=200&height=200`
    Return the resized image given `width` and `height`
    - Cache resized image with given dimensions for repeated requests
    - Test if the endpoint returns 200 with the correct image and correct sizes
    - Test if the endpoint returns 400 given invalid dimensions such as non-positive or decimal numbers

Documentation:
  - Write guide on how to run the application in development and production
  - Write guide on how to test the application (using Jasmine, Supertest and Postman)
  - Write guide on how to read the logs (using log4js)
  - Write guide on how to access API documentation (using Swagger)